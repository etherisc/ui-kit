/*
 * =============================================================================
 * THEME.CSS - DaisyUI ‚Üî Shadcn CSS Variable Bridge
 * =============================================================================
 * 
 * PURPOSE:
 * This file serves as the dynamic bridge between DaisyUI design tokens and 
 * Shadcn CSS variables, enabling theme switching while providing fallback values.
 * 
 * CSS CASCADE POSITION:
 * 1. ‚úÖ IMPORTED FIRST by globals.css
 * 2. ‚¨áÔ∏è  Then Tailwind @base layer applies hardcoded fallbacks
 * 3. ‚¨áÔ∏è  Then Tailwind @components and @utilities
 * 
 * WHAT THIS FILE DOES:
 * - Maps DaisyUI variables (--p, --b1, --bc) to Shadcn names (--primary, --background, --foreground)
 * - Provides fallback values when DaisyUI variables are missing: hsl(var(--b2, 0 0% 90%))
 * - Handles light/dark mode switching via .dark selector
 * - Prevents black borders by ensuring --border always has a value
 * 
 * WHAT THIS FILE SHOULD NOT CONTAIN:
 * ‚ùå Tailwind directives (@tailwind, @apply)
 * ‚ùå Hardcoded final fallback values (those go in globals.css)
 * ‚ùå Base element styles (*, body, etc.)
 * ‚ùå Component-specific styles
 * 
 * VARIABLE NAMING CONVENTION:
 * - Use Shadcn naming: --primary, --background, --border, --muted
 * - NOT DaisyUI naming: --p, --b1, --bc (those are source tokens)
 * 
 * FALLBACK STRATEGY:
 * - Always provide fallback: hsl(var(--source-token, fallback-value))
 * - Fallback values should be reasonable defaults for the semantic meaning
 * - Light mode fallbacks: bright backgrounds (90%+), dark text (10%-)
 * - Dark mode fallbacks: dark backgrounds (15%-), light text (85%+)
 * 
 * CONFLICT PREVENTION:
 * üö® NEVER override variables defined in globals.css @layer base
 * üö® NEVER use @layer directives here (conflicts with Tailwind)
 * üö® NEVER define variables without fallbacks
 * ‚úÖ Always test both with and without DaisyUI loaded
 * ‚úÖ Variables here should be DYNAMIC, globals.css should be STATIC
 * 
 * =============================================================================
 */

:root {
  /* DaisyUI HSL tokens ‚Üí Shadcn variables */
  /* Base colors */
  --primary: hsl(var(--p));
  --primary-foreground: hsl(var(--pc));

  --secondary: hsl(var(--s));
  --secondary-foreground: hsl(var(--sc));

  --accent: hsl(var(--a));
  --accent-foreground: hsl(var(--ac));

  --destructive: hsl(var(--er));
  --destructive-foreground: hsl(var(--erc));

  /* UI elements */
  --background: hsl(var(--b1));
  --foreground: hsl(var(--bc));
  --card: hsl(var(--b1));
  --card-foreground: hsl(var(--bc));
  --popover: hsl(var(--b1));
  --popover-foreground: hsl(var(--bc));

  /* Borders and shadows */
  /* --border: hsl(var(--b2)); --border is for border with, not color  */
  --input: hsl(var(--b2));
  --ring: hsl(var(--p));

  /* Status colors */
  --success: hsl(var(--su));
  --success-foreground: hsl(var(--suc));
  --warning: hsl(var(--wa));
  --warning-foreground: hsl(var(--wac));
  --info: hsl(var(--in));
  --info-foreground: hsl(var(--inc));

  /* Shadows */
  --radius: 0.5rem;
  --shadow-color: 220 3% 15%;
  --shadow-strength: 1%;
  --shadow-sm: 0 1px 2px 0
    hsl(var(--shadow-color) / calc(var(--shadow-strength) + 9%));
  --shadow:
    0 1px 3px 0 hsl(var(--shadow-color) / calc(var(--shadow-strength) + 10%)),
    0 1px 2px -1px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 9%));
  --shadow-md:
    0 4px 6px -1px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 9%)),
    0 2px 4px -2px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 9%));
  --shadow-lg:
    0 10px 15px -3px
      hsl(var(--shadow-color) / calc(var(--shadow-strength) + 8%)),
    0 4px 6px -4px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 8%));
}

.dark {
  /* DaisyUI HSL tokens ‚Üí Shadcn variables for dark mode */
  /* Base colors */
  --primary: hsl(var(--p));
  --primary-foreground: hsl(var(--pc));

  --secondary: hsl(var(--s));
  --secondary-foreground: hsl(var(--sc));

  --accent: hsl(var(--a));
  --accent-foreground: hsl(var(--ac));

  --destructive: hsl(var(--er));
  --destructive-foreground: hsl(var(--erc));

  /* UI elements */
  --background: hsl(var(--n));
  --foreground: hsl(var(--nc));
  --card: hsl(var(--n));
  --card-foreground: hsl(var(--nc));
  --popover: hsl(var(--n));
  --popover-foreground: hsl(var(--nc));

  /* Borders and shadows */
  /* --border: hsl(var(--b3)); --border is for border with, not color  */
  --input: hsl(var(--b3));
  --ring: hsl(var(--p));

  /* Status colors */
  --success: hsl(var(--su));
  --success-foreground: hsl(var(--suc));
  --warning: hsl(var(--wa));
  --warning-foreground: hsl(var(--wac));
  --info: hsl(var(--in));
  --info-foreground: hsl(var(--inc));

  /* Shadows - darker for dark mode */
  --shadow-color: 220 40% 2%;
  --shadow-strength: 4%;
}
