/*
 * =============================================================================
 * GLOBALS.CSS - Tailwind Foundation & Final Fallbacks
 * =============================================================================
 * 
 * PURPOSE:
 * This file sets up Tailwind CSS foundation and provides hardcoded fallback 
 * values as the ultimate safety net when theme.css dynamic mappings fail.
 * 
 * CSS CASCADE POSITION:
 * 1. ‚¨áÔ∏è  Imports theme.css FIRST (dynamic DaisyUI ‚Üí Shadcn mappings)
 * 2. ‚úÖ THEN applies Tailwind @base layer (hardcoded fallbacks override dynamic)
 * 3. ‚¨áÔ∏è  Then @components and @utilities layers
 * 
 * IMPORT ORDER CRITICAL:
 * @import "../theme/theme.css";  ‚Üê MUST BE FIRST!
 * @tailwind base;                ‚Üê Overwrites with static fallbacks
 * 
 * WHAT THIS FILE DOES:
 * - Sets up Tailwind CSS (@tailwind base, components, utilities)
 * - Provides hardcoded CSS variable fallbacks in @layer base
 * - Applies base styles to HTML elements (*, body)
 * - Defines utility overrides for placeholders, etc.
 * - Serves as final safety net when dynamic theming fails
 * 
 * WHAT THIS FILE SHOULD NOT CONTAIN:
 * ‚ùå DaisyUI variable mappings (those go in theme.css)
 * ‚ùå Dynamic fallbacks with var() functions
 * ‚ùå Theme switching logic (.dark overrides)
 * ‚ùå Component-specific styles (those go in component files)
 * 
 * VARIABLE HIERARCHY:
 * 1. üåà DaisyUI variables (--p, --b1) - when available
 * 2. üåâ theme.css mappings with fallbacks - hsl(var(--b2, 0 0% 90%))
 * 3. üîí globals.css @layer base - hardcoded values (THIS FILE)
 * 
 * FALLBACK STRATEGY:
 * - Use hardcoded HSL values: --border: 0 0% 89.8%
 * - NO var() functions here - these are final fallbacks
 * - Values should match theme.css fallbacks for consistency
 * - Light/dark mode handled by same variable names in different selectors
 * 
 * CONFLICT PREVENTION:
 * üö® NEVER change the @import order - theme.css MUST come first
 * üö® NEVER use dynamic fallbacks - use hardcoded values only
 * üö® NEVER remove @layer base - required for proper CSS cascade
 * ‚úÖ Only define variables that theme.css also defines
 * ‚úÖ Values here are STATIC SAFETY NET, theme.css is DYNAMIC BRIDGE
 * ‚úÖ Test by temporarily disabling theme.css import
 * 
 * =============================================================================
 */

/* Import theme variables */
@import "../theme/theme.css";

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 40%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border-color: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 70%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border-color: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  /* Override Tailwind's hardcoded placeholder colors with DaisyUI theme variables */
  input::placeholder,
  textarea::placeholder,
  input::-moz-placeholder,
  textarea::-moz-placeholder {
    color: hsl(var(--muted-foreground)) !important;
  }
}
